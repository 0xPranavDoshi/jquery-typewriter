!(function (t) {
  const e = (t) => new Promise((e) => setTimeout(e, t))
  t.fn.typeWrite = function (s) {
    var r = t.extend(
      { speed: 50, repeat: !1, cursor: !0, color: 'black', interval: 1e3 },
      s
    )
    let i = 100 - r.speed
    return new Promise((s, a) => {
      this.each(async function () {
        var a = t(this).text()
        ;(letters = a.split('')),
          t(this).text(''),
          t(this).css('color', r.color),
          t(this).css('margin', '0px')
        for (var n = letters[0]; 1 == r.repeat; ) {
          for (let s = 0; s < letters.length; s++)
            1 == r.cursor
              ? void 0 !== letters[s + 1]
                ? (t(this).text(n),
                  t('#cursor').remove(),
                  t(this).append("<span id='cursor'>︳</span>"),
                  t('#cursor').css('animation', 'blink 1s infinite'),
                  (n += letters[s + 1]),
                  await e(i))
                : (t(this).text(n),
                  t('#cursor').remove(),
                  t(this).append("<span id='cursor'>︳</span>"),
                  (n += letters[s]),
                  await e(r.interval))
              : void 0 !== letters[s + 1]
              ? (t(this).text(n), (n += letters[s + 1]), await e(i))
              : (t(this).text(n), (n += letters[s]), await e(r.interval))
          console.log('Clearing text'), t(this).text(''), (n = letters[0])
        }
        for (let s = 0; s < letters.length; s++)
          1 == r.cursor
            ? void 0 !== letters[s + 1]
              ? (t(this).text(n),
                t('#cursor').remove(),
                t(this).append("<span id='cursor'>︳</span>"),
                t('#cursor').css('animation', 'blink 1s infinite'),
                (n += letters[s + 1]),
                await e(i))
              : (t(this).text(n),
                t('#cursor').remove(),
                t(this).append("<span id='cursor'>︳</span>"),
                (n += letters[s]),
                await e(i))
            : void 0 !== letters[s + 1]
            ? (t(this).text(n), (n += letters[s + 1]), await e(i))
            : (t(this).text(n), (n += letters[s]), await e(i))
        s('Done')
      })
    })
  }
})(jQuery)
